% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/measure_degenerate.R
\name{measure_degenerate}
\alias{measure_degenerate}
\title{Measure if reached limit of iterations}
\usage{
measure_degenerate(X, Y, X_init, indicator, env = parent.frame())
}
\arguments{
\item{X}{named list;
imputed values, in order of appearance by row in original data,
of each variable (named) from one iteration within missForest
procedure.}

\item{Y}{named list;
imputed values, in order of appearance by row in origina data,
of each variable (named) from the iteration within the missForest
procedure succeeding that used to determine \code{X}.}

\item{X_init}{data.frame;
a data set including any of numeric, logical, integer, factor and
ordered data types, to be used as the initial state of the
missForest procedure.}

\item{indicator}{named list;
an indicator of the missing (\code{=T}) or not-missing (\code{=F})
status of the columns of \code{X_init}.}

\item{env}{environment;
environment of the calling function}
}
\value{
named numeric;
            zero when the limit on number of iterations has been reached,
            otherwise the current iteration.
}
\description{
A degenerate 'measure' of convergence, which simply returns whether to
continue if the limit of the number of iterations has been reached, or not.
}
\examples{
\dontrun{
# simply pass to miForang
miForang(iris, stop.measure=measure_degenerate)
}
}
\seealso{
\code{\link{miForang}}
}
